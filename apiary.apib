FORMAT: 1A
HOST: https://affiliate.api.diablomedia.com

# Diablo Publisher API V1

Welcome to the documentation for our Affiliate API. We've designed this API to give you, the affiliate, programmatic access to all of the functionality of our affiliate interface. In other words, we dog-food this API as it's the same API that we use in our [Affiliate User Interface](https://affiliate.diablomedia.com). Anything that we do in our Affiliate UI, you can do with this API with your own integrations.

After the "Authentication" section below, each group is broken out to the different types of "resources" that we provide through the API. Generally each resource type has a "Collection" endpoint and a "Resource" endpoint. Collections will be a list of objects of that type, and a Resource is a single object of that type. Browse to the section that you're interested in to see sample requests and responses. The resource types in a Collection response typically contain less properties than the corresponding Resource response, to reduce how much data is returned over the wire for each request. The sample responses for each resource type indicate which properties we return for the Collection vs. Resource requests for an object.

This is a REST JSON API, so all requests must send the `Accept: application/json` header in order for the API to respond with an expected response (the "Try Now" functionality of this documentation should do this for sample requests).

The responses are formatted to meet the [HAL](http://stateless.co/hal_specification.html) specification but should be readable/parseable by any JSON parser.

If you find any inconsistencies between this documentation and the API itself, please open an issue at [Github](https://github.com/diablomedia/pubapi_docs) or contact us [directly](mailto:info@diablomedia.com). We're always open to changes/improvements that will make this API more useful to our affiliates, so please let us know how we can make it better.

# Versioning

This is the first release of our API, therefore we've used the "v1" tag on the URL. If we ever need to make breaking changes to the API (that would break any integration that our affiliates have already created) we'll change the URL for the api to the next major version ("v2" would be next). You may continue to use the older version of the API for as long as you'd like (we'll probably retire older versions at some point, but we'll work with you to be sure that we don't break any integrations that you've setup on older versions of the API).

# Authentication

You must have an API token to make requests against this API. Use our [affiliate interface](https://affiliate.diablomedia.com) to generate an API token (you can do this in the "API Access" sub-section of the "User Preferences" section). Once you have a token, you can authenticate to the API in one of two ways:

## Authorization Header

This method is the most secure, because it keeps your token out of the request's query string (which can end up in proxy logs). Add your token to the `Authorization Header` as demonstrated below (replace xxxxxxxxxxxxxxxxxxx with your token):

  `Authorization: Bearer xxxxxxxxxxxxxxxxxxx`

In the examples in this documentation we use "pleaseinsertyourtokenhere" as the token placeholder. If you use the "Try" functionality of these docs, you'll need to replace that text with your actual token to get a real response from our server.

## Query String Parameter

If the header option isn't possible with your integration, this method is supported as well. Simply add your token as a query string parameter to the request's URL (replace xxxxxxxxxxxxxxxxxxx with your token):

  `https://affiliate.api.diablomedia.com/v1/campaigns?publisher_id=10000&access_token=xxxxxxxxxxxxxxxxxxx`

## Account Access

Tokens are assigned to a User Account (also called a Contact), which means that a single account may have access to several Publisher accounts in our system if your Contact record is linked to more than one Publisher. Because of this, most of the API requests require that a `publisher_id` query string parameter is added to the request so that we know which Publisher account the request is for. In the example requests below we've denoted if the `publisher_id` query string parameter is required or not (if it's not passed for these requests, you'll receive a `401` error response).

# Group Campaigns

## Campaign Resource [/v1/campaigns/{campaign_id}{?publisher_id}]

Returns a full record for the campaign specified in the URL.

+ Attributes (Campaign Full)

+ Parameters
    + campaign_id: 1 (required, number) - ID of the Campaign in form of an integer
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Campaign Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Campaign Full)

## Campaign Creatives Export [/v1/campaigns/{campaign_id}/creatives_export{?publisher_id}]

This endpoint will return a ZIP file of all of this campaign's creatives.

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + campaign_id: 1 (required, number) - ID of the Campaign to export creatives for

### Export Creatives [GET]

+ Request
    + Headers

            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/zip)

## Campaign Suppression Download [/v1/campaigns/{campaign_id}/suppression{?publisher_id}]

This endpoint will redirect the request to the suppression file download location for this campaign (if applicable), and log the download in our system.

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + campaign_id: 1 (required, number) - ID of the Campaign to download the suppression file for

### Download Suppression File [GET]

+ Request
    + Headers

            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 302
    + Headers

            Location: https://test.com/text.csv

## Campaigns Collection [/v1/campaigns{?category,country,page,payout_type,publisher_id,sort,traffic_type,type,visibility}]

Paged listing of all campaigns available, can be filtered by various campaign properties.

+ Parameters
    + category: test (optional, string) - The slug of a category (or categories separated by commas) to filter the results by
    + country: US (optional, string) - The "code" of a country (or several countries, separated by commas) to filter by
    + page: 1 (optional, number) - The page of campaigns to return
    + payout_type: cpa (optional, enum[string]) - Filter the results by campaign payout type, separate several options with a comma
        + Members
            + cpa
            + cpc
            + revshare
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + sort: name (optional, string) - Sort the results by this field, prepend with a dash (-) to reverse the sort direction
    + traffic_type: email (optional, string) - Filter the results by campaign traffic type slug (separate by a comma to filter by multiple traffic types)
    + type: standard (optional, enum[string]) - Filter the results by campaign type, separate several options with a comma
        + Members
            + standard
            + paypercall
            + coreg
            + hostandpost
    + visibility: all (optional, enum[string]) - Filter the results by visibility
        + Members
            + all
            + approved
            + unapproved
            + pending
            + running

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/campaigns?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/campaigns?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/campaigns?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/campaigns?page=2&publisher_id=10000 (string)
    + `_embedded` (object)
        + campaigns (array[Campaign Lite])

### View Campaign List [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Campaigns Collection)

# Group Campaign Approvals

A "Campaign Approval" is an approval request made against a specific campaign for a specific publisher account. Approval Requests are sent to our affiliate team where they can be approved or denied. Only one outstanding approval request can exist for a specific campaign/publisher combination.

## Campaign Approval Resource [/v1/campaign_approvals/{approval_id}{?publisher_id}]

Use this endpoint to view existing approval requests that you've made.

+ Parameters
    + approval_id: 1 (required, number) - ID of the approval to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes (Campaign Approval Full)

### View a Campaign Approval Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Campaign Approval Full)

## Campaign Approval Collection [/v1/campaign_approvals{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/campaign_approvals?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/campaign_approvals?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/campaign_approvals?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/campaign_approvals?page=2&publisher_id=10000 (string)
    + `_embedded` (object)
        + `campaign_approvals` (array[Campaign Approval Full])

### List Campaign Approvals [GET]

List all campaign approval requests for this publisher.

+ Parameters
  + page: 1 (optional, number) - Page number of results

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Campaign Approval Collection)

### Make an Approval Request [POST]

If you are not yet authorized to run a campaign (the campaign's `approval_status` is not "approved"), you can make an approval request for that campaign with this request.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere
            Content-type: application/json

    + Body

            {
                "campaign_id": 2,
                "traffic_types": ["Display", "Email"],
                "start_date": "2016-01-01",
                "test_budget": "100",
                "request_detail": "Target Audience, Placement, etc",
                "success_criteria": "EPC, Conversion Rate, etc",
		"custom_creative": "Yes"
            }

+ Response 200 (application/hal+json)
    + Headers

            Location: https://affiliate.api.diablomedia.com/v1/campaign_approvals/1/

    + Attributes (Campaign Approval Full)

# Group Categories

We use categories to classify our campaigns and publishers to help us (and you) find campaigns that are a good fit. These categories are used to filter campaigns and can also be assigned to a publisher's "categories" property, showing that the publisher is interested in offers that span those categories.

## Category Collection [/v1/categories]

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/categories (string)
    + `_embedded` (object)
        + `categories` (array[Category Full])

### List Categories [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Category Collection)

# Group Contacts

A "contact" is a user account that is associated to one or many publisher accounts. Access to our system is done through a Contact, which may have access to several publisher accounts.

## Contact Resource [/v1/contacts/{contact_id}]

+ Attributes (Contact Full)

+ Parameters
    + contact_id: 1 (required, number) - ID of the Contact

### View a Contact Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Contact Full)

### Update a Contact [PATCH]

The following properties of a Contact record can be updated through this API:

  * address
  * address2
  * birthday
  * city
  * country
  * fax
  * first_name
  * last_name
  * messaging
  * mobile_phone
  * password
  * phone
  * postal_code
  * region

To update a Contact, issue a PATCH request containing a JSON body with the properties that you want to update, as shown in the example.  The `id` property of the JSON request must match the id of your user account.

+ Request
    + Headers

            Content-type: application/json
            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

    + Body

            {
                "id": 1,
                "first_name": "New",
                "last_name": "Name"
            }

+ Response 200 (application/hal+json)
    + Attributes (Contact Full)

## Contacts Collection [/v1/contacts]

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/contacts?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/contacts (string)
            + last: https://affiliate.api.diablomedia.com/v1/contacts?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/contacts?page=2 (string)
    + `_embedded` (object)
        + contacts (array[Contact Lite])

### View a Contact List [GET]

This endpoint is provided for consistency, but will only ever return the contact associated with your token.

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Contacts Collection)

# Group Countries

The country resources are referenced on Campaigns, which signifies which countries the campaign accepts traffic from.

## Country Collection [/v1/countries]

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/countries?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/countries (string)
            + last: https://affiliate.api.diablomedia.com/v1/countries?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/countries?page=2 (string)
    + `_embedded` (object)
        + `countries` (array[Country Full])

### List Countries [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Country Collection)

## Country Resource [/v1/countries/{country_code}{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account your are working as
    + country_code: US (required, string) - 2 digit ISO code for Country to fetch

+ Attributes (Country Full)

### View a Country Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Country Resource)

# Group Creatives

## Creative Resource [/v1/creatives/{creative_id}{?publisher_id}]

+ Attributes (Creative Full)

+ Parameters
    + creative_id: 1 (required, number) - ID of the Creative in form of an integer
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Creative Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Creative Full)

## Creatives Collection [/v1/creatives{?campaign,page,publisher_id,sort}]

+ Parameters
    + campaign: 1 (optional, number) - Filter creatives by campaign id that they are attached to
    + page: 1 (optional, number) - The page of campaigns to return
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + sort: id (optional, string) - Sort the results by this field, prepend with a dash (-) to reverse the sort direction

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/creatives?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/creatives?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/creatives?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/creatives?page=2&publisher_id=10000 (string)
    + `_embedded` (object)
        + creatives (array[Creative Lite])

### View Creative List [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Creatives Collection)

## Export Creatives [/v1/creatives/{creative_id}/export{?publisher_id}]

+ Parameters
    + creative_id: 2 (number, required) - ID of the creative to export
    + publisher_id: 10000 (number, required) - ID of the Publisher account you are working as

### Export Creative [GET]

+ Request
    + Headers

            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/zip)
    + Body

# Group Messages

## Message Resource [/v1/messages/{message_id}{?publisher_id}]

+ Attributes (Message Full)

+ Parameters
    + message_id: 1 (required, number) - ID of the message to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Message Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Message Resource)

### Mark a Message as Read [PATCH]

To mark a message as read, you need to perform a PATCH request against the message's resource URL and send "true" for the `read` property, as shown in the example.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere
            Content-type: application/json

    + Body

            {
                "id": 1,
                "read": true
            }

+ Response 200 (application/hal+json)
    + Attributes (Message Resource)

### Delete a Message [DELETE]

+ Request
    + Headers

            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 204

## Message Collection [/v1/messages{?page,publisher_id}]

+ Parameters
    + publisher_id: 10000 (number, required) - ID of the Publisher account you are working as
    + page: 1 (number, optional) - Page number of results to fetch

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/messages?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/messages?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/messages?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/messages?page=2&publisher_id=10000 (string)
    + `_embedded` (object)
        + messages (array[Message Lite])

### List Messages [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Message Collection)

# Group Phone Numbers

## Phone Number Resource [/v1/phone_numbers/{number_id}{?publisher_id}]

+ Attributes (Phone Number Full)

+ Parameters
    + number_id: 1 (required, number) - ID of the Phone Number to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Phone Number Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Phone Number Full)

### Delete a Phone Number [DELETE]

+ Request
    + Headers

            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 204

## Phone Number Collection [/v1/phone_numbers{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/phone_numbers?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/phone_numbers?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/phone_numbers?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/phone_numbers?page=2&publisher_id=10000 (string)
    + `_embedded` (object)
        + phone_numbers (array[Phone Number Lite])

### View Phone Number List [GET]

+ Parameters
    + campaign: 1 (optional, number) - Filter the results by campaign id
    + page: 1 (optional, number) - The page of phone numbers to return

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Phone Number Collection)

### Add Phone Numbers [POST]

+ Request Add a Phone Number (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere
            Content-type: application/json

    + Body

            {
                "campaign_id": 1
            }

+ Response 200 (application/hal+json)
    + Attributes (Phone Number Full)

+ Request Add a Phone Number with Sid (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

    + Body

            {
                "campaign_id": 1,
                "sid": "abc123"
            }

+ Response 200 (application/hal+json)
    + Attributes (Phone Number Full Sid)

# Group Pixels

## Pixel Resource [/v1/pixels/{pixel_id}{?publisher_id}]

+ Attributes (Pixel Full)

+ Parameters
    + pixel_id: 1 (required, number) - ID of the Pixel to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Pixel Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Pixel Full)

### Update a Pixel [PATCH]

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere
            Content-type: application/json

    + Body

            {
                "pixel": "http://test.com",
                "version": 1
            }


+ Response 200 (application/hal+json)
    + Attributes (Pixel Full)

### Delete a Pixel [DELETE]

+ Request
    + Headers

            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 204

## Pixels Collection [/v1/pixels{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/pixels?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/pixels?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/pixels?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/pixels?page=2&publisher_id=10000 (string)
    + `_embedded` (object)
        + pixels (array[Pixel Full])

### View Pixel List [GET]

+ Parameters
    + campaign: 1 (optional, number) - Filter the results by campaign id
    + global: false (optional, boolean) - Filter the results by their global status
    + page: 1 (optional, number) - The page of pixels to return
    + sort: id (optional, string) - Sort the results by this field, prepend with a dash (-) to reverse the sort direction
    + type: url (optional, enum[string]) - Filter the results by pixel type
        + Members
            + url
            + html

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Pixels Collection)

### Adding Pixels [POST]

+ Request Add a Global Pixel
    + Headers

            Accept: application/json
            Content-type: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

    + Body

            {
                "pixel": "http://test.com"
            }

+ Response 200 (application/hal+json)
    + Attributes (Pixel Full Global)

+ Request Add a Campaign Pixel (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

    + Body

            {
                "pixel": "http://test.com",
                "campaign_id": 1
            }

+ Response 200 (application/hal+json)
    + Attributes (Pixel Full)

# Group Publishers

## Publisher Resource [/v1/publishers/{id}]

+ Parameters
    + id: 10001 (number, required) - The ID of the Publisher you want to view

+ Attributes (Publisher Full)

### View a Publisher Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Publisher Full)

### Update a Publisher [PATCH]

+ Parameters
    + id: 10000 (number, required) - The ID of the Publisher you are updating

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere
            Content-type: application/json

    + Body

            {
                "id": 10000,
                "version": 1,
                "website": "https://test.com"
            }

+ Response 200 (application/hal+json)
    + Attributes (Publisher Full)

## Publisher Manager Resource [/v1/publishers/{id}/manager]

+ Parameters
    + id: 10000 (number, required) - The ID of the Publisher whose manager you want to view

+ Attributes (Manager Full)

### View a Manager Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Publisher Manager Resource)

## Publishers Collection [/v1/publishers{?keyword,%21id}]

Lists the publisher records that your account has access to.

+ Parameters
    + keyword: abcdef (optional, string) - Search keyword used to filter Publishers
    + %21id: 10001,10002 (optional, string) - ID (or IDs separated by commas) of Publishers that should be filtered from the result

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/publishers?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/publishers (string)
            + last: https://affiliate.api.diablomedia.com/v1/publishers?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/publishers?page=2 (string)
    + `_embedded` (object)
        + publishers (array[Publisher Lite])

### View Publisher List [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Publishers Collection)

# Group Summary Report

This endpoint will provide grouped summary data based on input parameters you send.  The Summary Report in the UI (including the charts) is powered by this endpoint.

There are a lot of filtering capabilities for this report. Most of the columns returned can be filtered, this is particularly useful for the numeric columns (calls, clicks, leads, etc...). The parameters list for this request show some samples, but here is the full reference for the numeric filtering syntax that we support:

  * `>5` - This means "greater than 5"
  * `>=10` - This means "greater than or equal to 10"
  * `<1000` - This means "less than 1000"
  * `<=500` - This means "less than or equal to 500"
  * `100><1000` - This means "between 100 and 1000 (inclusive)"
  * `!100` - This means "not equal to 100"
  * `=10` - This means "exactly equal to 10"

## Summary Report Endpoint [/v1/reports/summary{?campaign,calls,click_through,clicks,country,creative,end,epc,group,impressions,leads,publisher_id,revenue,sid,sign_up,sort,start}]

+ Parameters
    + campaign: 1 (number, optional) - Filter report data by Campaign id
    + calls: >=0 (string, optional) - Filter report data by number of Calls (can use <, > and = to specify ranges)
    + click_through: >0 (string, optional) - Filter report data by Click Through range (can use <, > and = to specify ranges)
    + clicks: >=1 (string, optional) - Filter report data by number of Clicks (can use <, > and = to specify ranges)
    + country: US (string, optional) - Filter report data by Country (2 digit ISO code)
    + creative: 1 (number, optional) - Filter report data by Creative id
    + end: `2015-01-31` (string, required) - End date of the date range to get summary data for
    + epc: <10 (string, optional) - Filter report data by EPC range (can use <, > and = to specify ranges)
    + group: campaign (enum[string], optional) - Which dimension to group the results by
        + Members
            + campaign
            + day
            + sid
            + creative
            + country
            + publisher
    + impressions: >0 (string, optional) - Filter report data by number of Impressions (can use <, > and = to specify ranges)
    + leads: >=1 (string, optional) - Filter report data by Leads (can use >, < and = to specify ranges)
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + revenue: <1000 (string, optional) - Filter report data by Revenue range (can use <, > and = to specify ranges)
    + sid: 123* (string, optional) - Filter report data by SubId (can use asterisk as wildcard)
    + sign_up: `0><100` (string, optional) - Filter report data by Sign Up Ratio range (specify as a range of values to include)
    + sort: `-revenue` (string, optional) - Which column to sort results by, can prefix with a dash (-) to reverse sort direction
    + start: `2015-01-01` (string, required) - Start date of the date range to get summary data for

### Fetch Summary Data [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes
        + count: 1 (number) - Number of grouped rows in result
        + total: 1 (number) - Number of available grouped rows
        + start: `2015-01-01` (string) - The start of the date range requested
        + end: `2015-01-31` (string) - The end of the date range requested
        + group: campaign (string) - The grouped column specified in the request
        + tz_offset: `-0700` (string) - The timezone offset of the data
        + totals (object)
            + impressions: 10 (number) - Total number of impressions for this data set
            + clicks: 5 (number) - Total number of clicks for this data set
            + leads: 2 (number) - Total number of leads for this data set
            + calls: 1 (number) - Total number of calls for this data set
            + revenue: 10.50 (number) - Total revenue for this data set
            + click_through: 50 (number) - Total click through percent for this data set
            + sign_up: 40 (number) - Total sign up ration for this data set
            + epc: 2.1 (number) - Total EPC for this data set
        + _embedded (object)
            + data (array[Summary Report Row])
        + _links (object)
            + self
                + href: https://affiliate.api.diablomedia.com/v1/reports/summary?publisher_id=10000 (string) - Self link to the report requested
            + export
                + href: https://affiliate.api.diablomedia.com/v1/reports/summary/export?publisher_id=10000 (string) - Link to export this report as CSV data

## Summary Report Export [/v1/reports/summary/export{?campaign,calls,click_through,clicks,country,creative,end,epc,group,impressions,leads,publisher_id,revenue,sid,sign_up,sort,start}]

+ Parameters
    + campaign: 1 (number, optional) - Filter report data by Campaign id
    + calls: >=0 (string, optional) - Filter report data by number of Calls (can use <, > and = to specify ranges)
    + click_through: >0 (string, optional) - Filter report data by Click Through range (can use <, > and = to specify ranges)
    + clicks: >=1 (string, optional) - Filter report data by number of Clicks (can use <, > and = to specify ranges)
    + country: US (string, optional) - Filter report data by Country (2 digit ISO code)
    + creative: 1 (number, optional) - Filter report data by Creative id
    + end: `2015-01-31` (string, required) - End date of the date range to get summary data for
    + epc: <10 (string, optional) - Filter report data by EPC range (can use <, > and = to specify ranges)
    + group: campaign (enum[string], optional) - Which dimension to group the results by
        + Members
            + campaign
            + day
            + sid
            + creative
            + country
            + publisher
    + impressions: >0 (string, optional) - Filter report data by number of Impressions (can use <, > and = to specify ranges)
    + leads: >=1 (string, optional) - Filter report data by Leads (can use >, < and = to specify ranges)
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + revenue: <1000 (string, optional) - Filter report data by Revenue range (can use <, > and = to specify ranges)
    + sid: 123* (string, optional) - Filter report data by SubId (can use asterisk as wildcard)
    + sign_up: `0><100` (string, optional) - Filter report data by Sign Up Ratio range (specify as a range of values to include)
    + sort: `-revenue` (string, optional) - Which column to sort results by, can prefix with a dash (-) to reverse sort direction
    + start: `2015-01-01` (string, required) - Start date of the date range to get summary data for

### Export Summary Data [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (text/csv;charset=UTF-8)


# Group Traffic Types

## Traffic Type Collection [/v1/traffic_types]

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/traffic_types?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/traffic_types (string)
            + last: https://affiliate.api.diablomedia.com/v1/traffic_types?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/traffic_types?page=2 (string)
    + `_embedded` (object)
        + `traffic_types` (array[Traffic Type Full])

### List Traffic Types [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Traffic Type Collection)

# Group Transactions

## Transaction Resource [/v1/transactions/{transaction_id}{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + transaction_id: L1 (string,required) - Transaction ID to fetch

+ Attributes (Transaction Full)

### View a Transaction Detail [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Transaction Resource)

## Transaction Collection [/v1/transactions{?campaign,country,creative,end,ip,page,publisher_id,sid,sort,start,trx,type}]

+ Parameters
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + campaign: 1 (number, optional) - Filter transactions by a campaign
    + country: US (string, optional) - Filter transactions by a country
    + creative: 1 (number, optional) - Filter transactions by a creative id
    + end: `2015-01-31` (string, required) - End Date of date range, in YYYY-MM-DD format
    + ip: 123.123.* (string, optional) - Filter transactions by an IP address (can use asterisk as a wildcard character)
    + page: 1 (number, optional) - Page number of transactions to fetch
    + sid: 123abc* (string, optional) - Filter transactions by SubId (can use asterisk as a wildcard character)
    + sort: created (string, optional) - The column to sort transcations by, prefix with a dash (-) to reverse sort direction
    + start: `2015-01-01` (string, required) - Start Date of date range, in YYYY-MM-DD format
    + trx: kdkd* (string, optional) - Filter transactions by Trx Id (can use asterisk as a wildcard character)
    + type: lead (enum[string], optional) - Filter transactions by their type, if not specified, all types are returned
        + Members
            + lead
            + click
            + call

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/transactions?page=1&publisher_id=10000 (string)
            + first: https://affiliate.api.diablomedia.com/v1/transactions?publisher_id=10000 (string)
            + last: https://affiliate.api.diablomedia.com/v1/transactions?page=2&publisher_id=10000 (string)
            + next: https://affiliate.api.diablomedia.com/v1/transactions?page=2&publisher_id=10000 (string)
        + export (object)
            + href: https://affiliate.api.diablomedia.com/v1/transactions/export
    + `_embedded` (object)
        + transactions (array[Transaction Full])

### List Transactions [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (application/hal+json)
    + Attributes (Transaction Collection)

## Transaction Export [/v1/transactions/export{?campaign,country,creative,end,ip,page,publisher_id,sid,sort,start,trx,type}]

+ Parameters
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + campaign: 1 (number, optional) - Filter transactions by a campaign
    + country: US (string, optional) - Filter transactions by a country
    + creative: 1 (number, optional) - Filter transactions by a creative id
    + end: `2015-01-31` (string, required) - End Date of date range, in YYYY-MM-DD format
    + ip: 123.123.* (string, optional) - Filter transactions by an IP address (can use asterisk as a wildcard character)
    + page: 1 (number, optional) - Page number of transactions to fetch
    + sid: 123abc* (string, optional) - Filter transactions by SubId (can use asterisk as a wildcard character)
    + sort: created (string, optional) - The column to sort transcations by, prefix with a dash (-) to reverse sort direction
    + start: `2015-01-01` (string, required) - Start Date of date range, in YYYY-MM-DD format
    + trx: kdkd* (string, optional) - Filter transactions by Trx Id (can use asterisk as a wildcard character)
    + type: lead (enum[string], optional) - Filter transactions by their type, if not specified, all types are returned
        + Members
            + lead
            + click
            + call

### Export Transactions [GET]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer pleaseinsertyourtokenhere

+ Response 200 (text/csv;charset=UTF-8)

# Data Structures

## Campaign Base (object)
- id: 1 (number) - Campaign's Id
- name: Campaign Name (string) - Campaign's Name
- status: active, inactive (enum) Campaign's Status ("active", "inactive")
- thumbnail (string) URL to campaign's thumbnail image

## Campaign Report Base (object)
- id: 1 (number) - Campaign's Id
- name: Campaign Name (string) - Campaign's Name
- payout_type: CPA, CPC, RevShare (enum) - The payout type of the campaign (CPA, CPC, RevShare)
- type: Standard, PayPerCall, CoReg, HostAndPost (enum) - Type of campaign (Standard, PayPerCall, CoReg, HostAndPost)
- status: active, inactive (enum) Campaign's Status ("active", "inactive")
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/campaigns/1?publisher_id=10000 (string)

## Campaign Minimal (Campaign Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/campaigns/1?publisher_id=10000 (string)

## Campaign Lite Base (Campaign Base)
- `approval_status`: approved (string) - Approval Status of campaign ['approved','pending','not_approved']
- categories: [] (array[Category Base]) - Array of category objects
- created: `2010-11-05T16:01:54+00:00` (string) - An ISO8601 date when the campaign was created
- description (string) - Campaign description, may contain HTML
- epc: 1.00 (number) - Publisher's EPC for this campaign
- payout: 5.00 (number) - The payout amount for this campaign (dollar amount for CPA/CPC campaigns, percentage for RevShare)
- payout_type: CPA (string) - The payout type of the campaign (CPA, CPC, RevShare)
- traffic_types: [] (array[Traffic Type Base]) - Array of traffic type objects
- type: Standard, PayPerCall, CoReg, HostAndPost (enum) - Type of campaign (Standard, PayPerCall, CoReg, HostAndPost)
- url: https://test.com (string) - URL of the offer's home page

## Campaign Lite (Campaign Lite Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/campaigns/1?publisher_id=10000 (string)

## Campaign Full (Campaign Lite Base)
- `_embedded` (object)
    - creatives (array[Creative Minimal]) - Low density view of Campaign's creatives
    - pixels (array[Pixel Minimal]) - Low density view of Campaign's third party pixels for this publisher
    - countries (array[Country Full]) - Array of country objects
    - `phone_numbers` (array[Phone Number Minimal], optional) - Phone numbers this publisher has created for this campaign (PayPerCall only)
- `_links` (object)
    - `creatives_export`
        - href: https://affiliate.api.diablomedia.com/v1/campaigns/1/creatives_export?publisher_id=10000 (string)
    - suppression
        - href: https://affiliate.api.diablomedia.com/v1/campaigns/1/suppression?publisher_id=10000 (string)
- coreg (object, optional) - If campaign is CoReg or HostAndPost type, this will contain posting fields and instructions
    - fields (array)
    - additional_instructions (string)
    - posting_url (string)
    - sample_url (string)
- `from_lines`: [] (array) - Array of approved Email "from" lines
- `phone_number_limit`: 5 (number, optional) - The limit of static phone numbers this publisher is allowed to have on this campaign (PayPerCall only)
- `pixel_type`: cookie, server_to_server (enum) - The pixel type this campaign uses (either "cookie" or "server_to_server")
- `subject_lines`: [] (array) - Array of approved Email Subject Lines for this campaign
- suppression (object)
    - `last_download`: `2010-11-05T16:01:54+00:00` (string, nullable) - An ISO8601 date when the suppression file was last downloaded by this publisher
    - `last_upload`: `2010-11-05T16:01:54+00:00` (string, nullable) - An ISO8601 date when a new suppression file was last uploaded

## Creative Report Base (object)
- id: 1 (number) - Creative's Id

## Creative Minimal (object)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/campaign_approvals/1?publisher_id=10000 (string)
- id: 1 (number) - Creative's Id
- created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the creative was created
- description: This is the creative's description (string) - Description of the creative
- type: Basic, Email, HTML, Banner (enum) - The creative's type ("Basic", "Email", "HTML", "Banner")

## Creative Lite (Creative Minimal)
- `_embedded` (object)
    - campaign (Campaign Minimal) - The campaign the creative is linked to
- size (object, optional) - The creative's width and height (Banner and HTML types only)
    - width: 468 (number)
    - height: 60 (number)
- thumbnail (string) - URL to the creative's thumbnail image
- url (string) - Publisher's URL for this creative (Basic and Banner types only)

## Creative Full (Creative Lite)
- html (string) The HTML body of the creative (HTML, Banner and Email types only)
- image (string) URL to the creative's banner image (Banner type only)
- text (string) Text version of the creative (Email type only)

## Phone Number Base (object)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/phone_numbers/1?publisher_id=10000 (string)
- id: 1 (number) - Phone Number's Id
- number: `+15551234567` (string) - The phone number itself

## Phone Number Minimal (Phone Number Base)

## Phone Number Lite (Phone Number Minimal)

## Phone Number Full (Phone Number Lite)
- `_embedded` (object)
    - campaign (Campaign Minimal) - The campaign the phone number is linked to

## Phone Number Full Sid (Phone Number Full)
- sid: abc123 (string) - The sid value that will be attributed to calls made with this phone number

## Pixel Base (object)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/pixels/1?publisher_id=10000 (string)
- created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the pixel was created
- id: 1 (number) - Pixel's Id
- pixel: https://test.com (string, required) - The content of the pixel (either the URL for "url" types, or the HTML content for "html" types)
- type: url, html (enum) - The type of the pixel (either "url" or "html")
- version: 1 (number) - The internal version number of this pixel (incremented when pixel is edited)

## Pixel Minimal (Pixel Base)
- global: false (boolean) - Whether or not the pixel is global (fires for all compatible campaigns)

## Pixel Full (Pixel Minimal)
- `_embedded` (object)
    - campaign (Campaign Minimal) - The campaign the pixel is linked to

## Pixel Full Global (Pixel Base)
- global: true (boolean) - Whether or not the pixel is global (fires for all compatible campaigns)
- `_embedded` (object)

## Campaign Approval Minimal (object)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/campaign_approvals/1?publisher_id=10000 (string)
- id: 1 (number) - Approval Id
- created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the approval was created
- status: pending (string) - Approval's status (Approved, Pending, Declined, Deleted)
- response_date: `2018-08-13T12:02:00+00:00` (string) - ISO8602 date when the approval/denial was recorded

## Campaign Approval Lite (Campaign Approval Minimal)
- response_comment: This is a comment (string) - A comment regarding the approval/denial
- traffic_types: [Display, Email] (array) - The traffic types requested to be ran
- start_date: 2018-08-03 (string) - The requested start date
- test_budget: 100 (string) - The requested number of test leads or clicks
- request_detail: Target Audience, Placement, etc (string) - Details of how the campaign will be ran
- success_criteria: EPC, Conversion Rate, etc (string) - How the test will be judged to be successful
- custom_creative: Yes or No (string) - Does publisher want to use a custom creative?

## Campaign Approval Full (Campaign Approval Minimal)
- `_embedded` (object)
    - campaign (Campaign Minimal) - The campaign the approval is for

## Category Base (object)
- id: 1 (number) - Category Id
- name: Category (string) - Category's Name
- slug: category (string) - Category's Name to be used in URLs

## Category Full (Category Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/categories/1?publisher_id=10000 (string)

## Traffic Type Base (object)
- id: 1 (number) - Traffic Type Id
- name: Category (string) - Traffic Type's Name
- slug: category (string) - Traffic Type's Name to be used in URLs

## Traffic Type Full (Traffic Type Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/traffic_types/1?publisher_id=10000 (string)

## Contact Base (object)
- id: 1 (number) - Contact Id
- email: test@test.com (string) - Contact's Email Address
- first_name: John (string) - Contact's First Name
- last_name: Doe (string) - Contact's Last Name
- phone: `123-555-1234` (string) - Contact's Phone Number
- type: Primary (string) - The type of contact at the company (Executive, Primary, Technical, Accounting, etc...)
- version: 1 (number) - The version number of this record, increments when the record is updated.

## Contact Writable (object)
- address: 123 Main St. (string, optional) - First line of Street Address
- address2: Apt 102 (string, optional) - Second line of Street Address
- birthday: 05/31 (string, optional) - Month/Day of contact's birthday
- city: Anycity (string, optional) - City of Street Address
- country: US (string, optional) - Country of Street Address
- fax: `123-555-1234` (string, optional) - Contact's Fax number
- first_name: John (string, required) - Contact's first name
- id: 1 (number, required) - Contact's Id
- last_name: Doe (string, optional) - Contact's last name
- messaging (object, optional) - Contact's messaging accounts
    - msn: msn@msn.com (string, optional)
    - aim: aimaccount (string, optional)
    - skype: skypeaccount (string, optional)
    - yim: yimaccount (string, optional)
    - twitter: @twitterhandle (string, optional)
    - icq: 203003335 (string, optional)
    - linkedin: linkedinprofile (string, optional)
- mobile_phone: `123-555-2134` (string, optional) - Contact's mobile phone number
- password: abc123pass (string, optional) - Update/set the password used to login
- phone: `123-555-2233` (string, optional) - Contact's phone number
- postal_code: 90210 (string, optional) - Postal Code of Street Address
- region: CA (string, optional) - State/Province/Region of Street Address
- version: 1 (number, required) - The version of the record at the time of retrieval

## Contact Lite (Contact Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/contacts/1?publisher_id=10000 (string)

## Contact Full (Contact Lite)
- address2: Apt 102 (string, optional) - Second line of Contact's Street Address
- address: 123 Main St. (string, optional) - First line of Contact's Street Address
- birthday: 05/31 (string, optional) - Contact's Birthday in MM/DD format
- city: Anycity (string, optional) - City of Contact's Street Address
- country: US (string, optional) - Country of Contact's Street Address
- fax: `123-555-1234` (string, optional) - Contact's Fax number
- has_password: false (boolean) - Whether or not Contact has a password set
- messaging (object) - Object containing Contact's different IM messaging account names (MSN, AIM, YIM, Skype, etc...)
    - msn: msn@msn.com (string, optional)
    - aim: aimaccount (string, optional)
    - skype: skypeaccount (string, optional)
    - yim: yimaccount (string, optional)
    - twitter: @twitterhandle (string, optional)
    - icq: 203003335 (string, optional)
    - linkedin: linkedinprofile (string, optional)
- mobile_phone: `123-555-1234` (string, optional) - Contact's mobile phone number
- postal_code: 12345 (string, optional) - Contact's Street Address postal code
- region: NY (string, optional) - Region part of Contact's Street Address

## Country Base (object)
- id: US (string) - Country's 2 digit ISO Code
- name: United States (string) - Country's full name

## Country Full (Country Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/countries/US?publisher_id=10000 (string)

## Message Base (object)
- id: 1 (number) - Message ID
- author (object) - Object containing the properties of the Author of the message
    - first_name: John (string) - Author's first name
    - last_name: Doe (string) - Author's last name
    - email: john@test.com (string) - Author's email address
- created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the message was created
- priority: info (string) - Priority level of the message
- read: false (boolean) - Whether or not the message has been read
- title: Test Message (string) - Title/Subject of the message
- type: message, promo, alert, compliance (enum) - The type of message (can be "message", "promo", "alert", "compliance")

## Message Lite (Message Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/messages/1?publisher_id=10000 (string)

## Message Full (Message Lite)
- content: <b>HTML content of message</b> (string) - The full content of the message (can contain HTML)
- text_content: Just text content (string) - Text version of the content

## Publisher Base (object)
- id: 10000 (number) - Publisher's Id
- version: 1 (number) - The version of the record at the time of retrieval
- company: Test Publisher (string) - Publisher's Company name
- created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the publisher was created
- primary_contact_id: 1 (number) - The "owning" contact record of this Publisher
- website: http://test.com (string) - The Publisher's company website

## Publisher Lite (Publisher Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/publishers/10000?publisher_id=10000 (string)
- `_embedded` (object)
    - categories (array[Category Full]) - Offer Categories Publisher is interested in
    - traffic_types (array[Traffic Type Full]) - Traffic Types Publisher is capable of running

## Publisher Full (Publisher Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/publishers/10000?publisher_id=10000 (string)
- `_embedded` (object)
    - categories (array[Category Full]) - Offer Categories Publisher is interested in
    - traffic_types (array[Traffic Type Full]) - Traffic Types Publisher is capable of running
    - contacts (array[Contact Lite]) - Contacts linked to this publisher account
    - manager (Manager Full)

## Publisher Owned (Publisher Full)
- payment_info (object)
    - payee: Jane Doe (string) - Payee's Name
    - payto: Personal (string) - Whether Payee is a Company or a Personal account (allowed values are Personal and Company)
    - method: Check, Paypal, ACH (enum) - Payment method, must be one of "Check", "Paypal" or "ACH"
    - ach_bank: Bank One (string, optional) - If method is "ACH" this must be sent, ACH Bank's name
    - ach_account: 123456 (string, optional) - If method is "ACH" this must be sent, ACH Bank's account number
    - ach_routing: 019292 (string, optional) - If method is "ACH" this must be sent, ACH Bank's routing number
    - ach_type: Checking, Savings (enum, optional) - If method is "ACH" this must be sent, ACH Account type. Either "Savings" or "Checking"
    - paypal_address: test@test.com (string, optional) - If method is "Paypal" this must be sent, Paypal email address that should receive payment

## Manager Base (object)
- id: 1 (number) - Manager's Id
- email: test@test.com (string) - Manager's Email address
- fax: `123-555-1234` (string) - Manager's Fax number
- first_name: Jane (string) - Manager's first name
- last_name: Manager (string) - Manager's last name
- messaging (object) - Object of different messaging accounts to contact Manager
    - aim: jane123 (string) - AIM name
    - linkedin: jane123 (string) - LinkedIn name
    - twitter: @jane123 (string) - Twitter handle
    - skype: jane123 (string) - Skype name
- mobile: `123-555-3030` (string) - Manager's mobile phone number
- phone: `123-555-3232` (string) - Manager's phone number

## Manager Full (Manager Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/publishers/10000/manager?publisher_id=10000 (string)

## Transaction Base (object)
- `_embedded` (object)
    - campaign (Campaign Minimal)
    - country (Country Full)
- id: L1 (string) - Transaction Id
- browser: Firefox (string) - Name of the browser from user's user-agent
- created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the transaction was created
- creative: 1 (number) - Id of the creative used in the transaction
- `device_type`: Desktop (string) - Device type from user's user-agent, example values "Desktop", "Mobile Phone", "Tablet" (not exhaustive)
- ip: 123.123.123.123 (string) - IP Address of user
- revenue: 1.50 (number) - Dollar amount of transaction (US Dollars)
- sid: 12345abc (string) - SubId sent by Publisher for this transaction
- trx: jkjkl333 (string) - TrxId sent by Publisher for this transaction
- type: Lead, Click, Call (enum) - Type of transaction

## Transaction Full (Transaction Base)
- `_links` (object)
    - self
        - href: https://affiliate.api.diablomedia.com/v1/transactions/L1?publisher_id=10000 (string)

## Summary Report Row (object)
- _embedded (object, optional)
    - campaign (Campaign Report Base, optional) - Campaign that this row represents, will only be available if the requested data is grouped by Campaign
    - country (Country Full, optional) - Country that this row represents, will only be available if the requested data is grouped by Country
    - creative (Creative Report Base, optional) - Creative that this row represents, will only be available if the requested data is grouped by Creative
- impressions: 10 (number) - Number of impressions for this row
- clicks: 5 (number) - Number of clicks for this row
- leads: 2 (number) - Number of leads for this row
- calls: 1 (number) - Number of calls for this row
- revenue: 10.5 (number) - Amount of revenue for this row
- click_through: 50 (number) - Click-through percentage for this row
- sign_up: 40 (number) - Sign-up ratio for this row
- epc: 2.1 (number) - EPC for this row
- day: `2015-01-01` (string, optional) - Date that this row represents, will only be available if the requested data is grouped by Day
- sid: 123456abc (string, optional) - SubId that this row represents, will only be available if the requested data is grouped by SubId
